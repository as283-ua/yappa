// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (username) 
VALUES ($1)
`

func (q *Queries) CreateUser(ctx context.Context, username string) error {
	_, err := q.db.Exec(ctx, createUser, username)
	return err
}

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT id, username, certificate
FROM users
WHERE username = $1
`

func (q *Queries) GetUserByUsername(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByUsername, username)
	var i User
	err := row.Scan(&i.ID, &i.Username, &i.Certificate)
	return i, err
}

const updateUserCert = `-- name: UpdateUserCert :exec
UPDATE users 
SET certificate = $2
WHERE username = $1
`

type UpdateUserCertParams struct {
	Username    string
	Certificate pgtype.Text
}

func (q *Queries) UpdateUserCert(ctx context.Context, arg UpdateUserCertParams) error {
	_, err := q.db.Exec(ctx, updateUserCert, arg.Username, arg.Certificate)
	return err
}
